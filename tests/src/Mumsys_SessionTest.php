<?php

/**
 * Generated by on 2016-01-30 at 17:08:33.
 */
class Mumsys_SessionTest
    extends Mumsys_Unittest_Testcase
{
    /**
     * @var Mumsys_Session
     */
    protected $_object;


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->_object = new Mumsys_Session();
    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->_object = null;
    }


    /**
     * Test nearly all methodes because of the problematic of php sessions
     * itselves to test them.
     */
    public function testAllMethodes()
    {
        $this->_object = new Mumsys_Session();

        // for code coverage
        $this->_object = new Mumsys_Session();

        // for code coverage
        $this->_object->clear();
        $actual6 = $this->_object->getAll();
        $expected6 = array();

        // test setter
        $this->_object->replace( 'testkey', array('val1','val2') );

        $actual1 = $this->_object->get( 'testkey' );
        $expected1 = array('val1','val2');

        $actual2 = $this->_object->getAll();
        $this->_object->__destruct();
        $expected2 = $_SESSION;

        $actual3 = $this->_object->getID();
        $expected3 = key( $_SESSION );

        $actual5 = $this->_object->getCurrent();
        $expected5 = $expected2[$expected3];

        $this->_object->register( 'newkey', array('val5','val6') );
        $actual4 = $this->_object->get( 'newkey' );
        $expected4 = array('val5','val6');
        // test default return
        $actual7 = $this->_object->get( 'notsetbefor', 'dingding' );
        $expected7 = 'dingding';

        // get
        $this->assertingEquals( $expected1, $actual1 );
        // __destruct
        $this->assertingEquals( $expected2, $actual2 );
        // getID
        $this->assertingEquals( $expected3, $actual3 );
        // register
        $this->assertingEquals( $expected4, $actual4 );
        // getCurrent
        $this->assertingEquals( $expected5, $actual5 );
        // clear
        $this->assertingEquals( $expected6, $actual6 );
        // test default return
        $this->assertingEquals( $expected7, $actual7 );

        // version checks
        $this->assertingEquals( 'Mumsys_Session 1.0.0', $this->_object->getVersion() );

        // test register existing
        $this->expectingException( 'Mumsys_Session_Exception' );
        $this->expectingExceptionMessage( 'Session key "testkey" exists' );
        $this->_object->register( 'testkey', array('val5', 'val6') );

        echo 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx';
    }

}
